name: Create Release

env:
    DEBUG: napi:*
    APP_NAME: rust-merkle-tree
    MACOSX_DEPLOYMENT_TARGET: '10.13'

permissions:
    contents: write
    id-token: write

on:
    push:
        tags:
            - v*

jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                settings:
                    - host: windows-latest
                      build: yarn build --target x86_64-pc-windows-msvc
                      target: x86_64-pc-windows-msvc
                    - host: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
                      build: yarn build --target x86_64-unknown-linux-gnu
                    - host: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
                      build: yarn build --target aarch64-unknown-linux-gnu
                    - host: macos-latest
                      target: x86_64-apple-darwin
                      build: yarn build --target x86_64-apple-darwin
                    - host: macos-latest
                      target: aarch64-apple-darwin
                      build: yarn build --target aarch64-apple-darwin

        name: stable - ${{ matrix.settings.target }} - node@22
        runs-on: ${{ matrix.settings.host }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: npm

            - name: Install
              uses: dtolnay/rust-toolchain@stable
              if: ${{ !matrix.settings.docker }}
              with:
                  toolchain: stable
                  targets: ${{ matrix.settings.target }}

            - name: Cache cargo
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      .cargo-cache
                      target/
                  key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

            - name: Install dependencies
              run: yarn install

            - name: Add aarch64 target
              run: rustup target add aarch64-unknown-linux-gnu
              if: ${{ matrix.settings.target == 'aarch64-unknown-linux-gnu' }}

            - name: Build
              run: ${{ matrix.settings.build }}
              shell: bash

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: bindings-${{ matrix.settings.target }}
                  path: ${{ env.APP_NAME }}.*.node
                  if-no-files-found: error
